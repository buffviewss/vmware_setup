#!/bin/bash

set -e

########################################
# S·ª¨A V·∫§N ƒê·ªÄ PASSWORD V√Ä AUTOLOGIN
########################################
fix_password_issues() {
    echo "üîß ƒêang s·ª≠a t·∫•t c·∫£ v·∫•n ƒë·ªÅ password..."

    # X√≥a password user hi·ªán t·∫°i
    sudo passwd -d $USER

    # C·∫•u h√¨nh sudo kh√¥ng c·∫ßn password
    echo "$USER ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/$USER

    # Auto-login cho LightDM (Lubuntu)
    sudo mkdir -p /etc/lightdm/lightdm.conf.d
    sudo tee /etc/lightdm/lightdm.conf.d/50-autologin.conf << EOF
[Seat:*]
autologin-user=$USER
autologin-user-timeout=0
autologin-session=Lubuntu
EOF

    # Auto-login cho GDM3 (Ubuntu)
    sudo tee /etc/gdm3/custom.conf << EOF
[daemon]
AutomaticLoginEnable=true
AutomaticLogin=$USER

[security]

[xdmcp]

[chooser]

[debug]
EOF

    # T·∫Øt GNOME Keyring v√† c√°c keyring kh√°c
    sudo apt remove --purge -y gnome-keyring seahorse kwalletmanager kwallet-kf5 2>/dev/null || true

    # X√≥a keyring data
    rm -rf ~/.local/share/keyrings ~/.gnupg ~/.config/kwalletrc 2>/dev/null || true

    # T·∫Øt PAM keyring
    for pamfile in /etc/pam.d/login /etc/pam.d/passwd /etc/pam.d/gdm-password /etc/pam.d/gdm-autologin; do
        sudo sed -i 's/.*pam_gnome_keyring.so.*/#&/' "$pamfile" 2>/dev/null || true
    done

    # T·∫Øt PolicyKit password prompts
    sudo mkdir -p /etc/polkit-1/localauthority/50-local.d
    sudo tee /etc/polkit-1/localauthority/50-local.d/disable-passwords.pkla << EOF
[Disable password prompts for $USER]
Identity=unix-user:$USER
Action=*
ResultActive=yes
ResultInactive=yes
ResultAny=yes
EOF

    # C·∫•u h√¨nh Chrome kh√¥ng y√™u c·∫ßu password
    mkdir -p ~/.config/google-chrome/Default
    cat > ~/.config/google-chrome/Default/Preferences << 'EOF'
{
   "profile": {
      "password_manager_enabled": false,
      "default_content_setting_values": {
         "password_manager": 2
      }
   }
}
EOF

    # C·∫•u h√¨nh Firefox kh√¥ng y√™u c·∫ßu password
    firefox -CreateProfile "default" 2>/dev/null || true
    sleep 2
    pkill firefox 2>/dev/null || true
    FF_PROFILE=$(find ~/.mozilla/firefox -name "*.default*" -type d 2>/dev/null | head -n 1)
    if [[ -n "$FF_PROFILE" ]]; then
        cat > "$FF_PROFILE/user.js" << 'EOF'
user_pref("security.ask_for_password", 0);
user_pref("security.password_lifetime", 9999);
user_pref("signon.rememberSignons", false);
user_pref("security.default_personal_cert", "");
EOF
    fi

    # T·∫Øt systemd user services c√≥ th·ªÉ g√¢y prompt
    systemctl --user disable gnome-keyring-daemon 2>/dev/null || true
    systemctl --user stop gnome-keyring-daemon 2>/dev/null || true

    # X√≥a Chrome keyring integration
    sudo rm -f /usr/share/applications/google-chrome.desktop 2>/dev/null || true
    cat > ~/.local/share/applications/google-chrome.desktop << 'EOF'
[Desktop Entry]
Version=1.0
Name=Google Chrome
Comment=Access the Internet
Exec=/usr/bin/google-chrome-stable --password-store=basic %U
StartupNotify=true
Terminal=false
Icon=google-chrome
Type=Application
Categories=Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml+xml;
EOF
    chmod +x ~/.local/share/applications/google-chrome.desktop

    echo "‚úÖ ƒê√£ s·ª≠a t·∫•t c·∫£ v·∫•n ƒë·ªÅ password!"
}

########################################
# C√ÄI ƒê·∫∂T NEKOBOX & TH∆Ø VI·ªÜN PH·ª§ THU·ªòC
########################################
install_nekobox() {
    echo "üîÑ ƒêang c√†i ƒë·∫∑t Nekobox v√† c√°c th∆∞ vi·ªán c·∫ßn thi·∫øt..."

    # ƒê·∫∑t locale h·ªá th·ªëng sang GB
    sudo locale-gen en_GB.UTF-8
    sudo update-locale LANG=en_GB.UTF-8

    # Update h·ªá th·ªëng
    sudo add-apt-repository universe -y || true
    sudo apt update && sudo apt upgrade -y

    # C√†i Open VM Tools
    sudo apt install -y open-vm-tools open-vm-tools-desktop || echo "‚ö†Ô∏è Warning: Open VM Tools not found for this Ubuntu version."

    # C√†i gdown, unzip, python3-venv
    sudo apt install -y python3-pip unzip python3-venv
    if ! command -v pip3 &> /dev/null; then
        sudo apt install -y python3-pip
    fi
    python3 -m venv ~/venv
    source ~/venv/bin/activate
    pip install --upgrade pip gdown

    # C√†i build-essential v√† Qt5 libraries
    sudo apt install -y build-essential \
        libqt5network5 libqt5core5a libqt5gui5 libqt5widgets5 qtbase5-dev \
        libqt5x11extras5 libqt5quick5 libqt5quickwidgets5 libqt5quickparticles5

    # Chu·∫©n b·ªã th∆∞ m·ª•c Nekoray
    rm -rf ~/Downloads/nekoray
    mkdir -p ~/Downloads/nekoray

    # T·∫£i Nekobox t·ª´ Google Drive
    cd ~/Downloads
    FILE_ID="1ZnubkMQL06AWZoqaHzRHtJTEtBXZ8Pdj"
    gdown --id "$FILE_ID" -O nekobox.zip || { echo "‚ùå Download failed! Check Google Drive file ID."; exit 1; }

    # Gi·∫£i n√©n Nekobox
    unzip -o nekobox.zip -d ~/Downloads/nekoray

    # X·ª≠ l√Ω folder l·ªìng nhau
    inner_dir=$(find ~/Downloads/nekoray -mindepth 1 -maxdepth 1 -type d | head -n 1)
    if [ "$inner_dir" != "" ] && [ "$inner_dir" != "$HOME/Downloads/nekoray" ]; then
        mv "$inner_dir"/* ~/Downloads/nekoray/
        rm -rf "$inner_dir"
    fi

    # Ph√¢n quy·ªÅn th·ª±c thi
    cd ~/Downloads/nekoray
    chmod +x launcher nekobox nekobox_core || echo "‚ö†Ô∏è Some files not found, skipping chmod."

    # T·∫°o shortcut desktop
    cat <<EOF > ~/Desktop/nekoray.desktop
[Desktop Entry]
Version=1.0
Name=Nekobox
Comment=Open Nekobox
Exec=$HOME/Downloads/nekoray/nekobox
Icon=$HOME/Downloads/nekoray/nekobox.png
Terminal=false
Type=Application
Categories=Utility;
EOF
    chmod +x ~/Desktop/nekoray.desktop

    # Autostart
    mkdir -p ~/.config/autostart
    cp ~/Desktop/nekoray.desktop ~/.config/autostart/nekoray.desktop
    chmod +x ~/.config/autostart/nekoray.desktop

    echo "‚úÖ Nekobox ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t v√† t·∫°o shortcut!"
}

########################################
# C√ÄI ƒê·∫∂T CHROME/FIREFOX T·ª™ GOOGLE DRIVE
########################################
install_browser() {
    echo "üì¶ ƒêang chu·∫©n b·ªã m√¥i tr∆∞·ªùng c√†i tr√¨nh duy·ªát..."

    # T·∫°o venv ri√™ng cho gdown
    if [[ ! -d "$HOME/gdown-venv" ]]; then
        python3 -m venv ~/gdown-venv
    fi
    source ~/gdown-venv/bin/activate
    pip install --no-cache-dir gdown

    CHROME_DRIVE_ID="1tD0XPj-t5C7p9ByV3RLg-qcHaYYSXAj1"
    FIREFOX_DRIVE_ID="1CeMNJTLgfsaFkcroOh1xpxFC-uz9HrLb"
    DOWNLOAD_DIR="$HOME/browser_temp"
    mkdir -p "$DOWNLOAD_DIR" && cd "$DOWNLOAD_DIR"

    # H·ªèi ch·ªçn tr√¨nh duy·ªát
    echo "Ch·ªçn tr√¨nh duy·ªát mu·ªën c√†i:"
    select browser in "Chrome" "Firefox" "Tho√°t"; do
        case $browser in
            Chrome) DRIVE_ID="$CHROME_DRIVE_ID"; BTYPE="chrome"; break;;
            Firefox) DRIVE_ID="$FIREFOX_DRIVE_ID"; BTYPE="firefox"; break;;
            Tho√°t) echo "üö™ Tho√°t script."; exit 0;;
            *) echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!";;
        esac
    done

    # T·∫£i folder t·ª´ Google Drive
    echo "üì• ƒêang t·∫£i to√†n b·ªô folder $BTYPE t·ª´ Google Drive..."
    gdown --folder "https://drive.google.com/drive/folders/$DRIVE_ID" --no-cookies

    # Li·ªát k√™ file t·∫£i v·ªÅ
    echo "üîç Danh s√°ch file t·∫£i v·ªÅ:"
    if [[ $BTYPE == "chrome" ]]; then
        FILE_LIST=$(find "$DOWNLOAD_DIR" -type f -name "*.deb")
    else
        FILE_LIST=$(find "$DOWNLOAD_DIR" -type f)
    fi

    if [[ -z "$FILE_LIST" ]]; then
        echo "‚ùå Kh√¥ng t√¨m th·∫•y file h·ª£p l·ªá!"
        exit 1
    fi

    echo "$FILE_LIST" | nl -s". "
    read -p "üëâ Nh·∫≠p s·ªë th·ª© t·ª± file mu·ªën c√†i: " choice
    FILE_SELECT=$(echo "$FILE_LIST" | sed -n "${choice}p")

    if [[ ! -f "$FILE_SELECT" ]]; then
        echo "‚ùå File kh√¥ng t·ªìn t·∫°i!"
        exit 1
    fi

    echo "‚úÖ Ch·ªçn file: $FILE_SELECT"
    find "$DOWNLOAD_DIR" -type f ! -name "$(basename "$FILE_SELECT")" -delete

    # G·ª° b·∫£n m·∫∑c ƒë·ªãnh
    echo "üóëÔ∏è G·ª° b·∫£n m·∫∑c ƒë·ªãnh..."
    if [[ $BTYPE == "chrome" ]]; then
        sudo apt remove -y google-chrome-stable || true
    elif [[ $BTYPE == "firefox" ]]; then
        sudo snap remove firefox || sudo apt remove -y firefox || true
    fi

    # C√†i ƒë·∫∑t v√† kh√≥a c·∫≠p nh·∫≠t
    if [[ $BTYPE == "chrome" ]]; then
        echo "üöÄ ƒêang c√†i Chrome..."
        sudo dpkg -i "$FILE_SELECT"
        sudo apt -f install -y
        sudo apt-mark hold google-chrome-stable
        sudo sed -i 's/^deb/# deb/' /etc/apt/sources.list.d/google-chrome.list 2>/dev/null

        # T·∫Øt update n·ªôi b·ªô Chrome
        sudo rm -rf /opt/google/chrome/cron/
        sudo mkdir -p /etc/opt/chrome/policies/managed
        cat <<EOF > /tmp/disable_update.json
{
  "AutoUpdateCheckPeriodMinutes": 0,
  "DisableAutoUpdateChecksCheckbox": true,
  "MetricsReportingEnabled": false
}
EOF
        sudo mv /tmp/disable_update.json /etc/opt/chrome/policies/managed/disable_update.json
        sudo chmod -R 000 /opt/google/chrome/cron || true

    elif [[ $BTYPE == "firefox" ]]; then
        echo "üöÄ ƒêang c√†i Firefox..."
        tar -xf "$FILE_SELECT"
        sudo rm -rf /opt/firefox_custom
        sudo mv firefox /opt/firefox_custom
        sudo ln -sf /opt/firefox_custom/firefox /usr/local/bin/firefoxcustom

        # T·∫Øt update n·ªôi b·ªô Firefox
        sudo mkdir -p /opt/firefox_custom/distribution
        cat <<EOF2 | sudo tee /opt/firefox_custom/distribution/policies.json >/dev/null
{
  "policies": {
    "AppAutoUpdate": false,
    "DisableAppUpdate": true,
    "ManualAppUpdateOnly": true
  }
}
EOF2
        sudo mkdir -p /opt/firefox_custom/browser/defaults/preferences
        echo 'pref("app.update.enabled", false);' | sudo tee /opt/firefox_custom/browser/defaults/preferences/disable_update.js >/dev/null
    fi

    # T·∫°o shortcut
    echo "üé® T·∫°o shortcut..."
    if [[ $BTYPE == "chrome" ]]; then
        cat <<EOF3 > ~/.local/share/applications/browser_custom.desktop
[Desktop Entry]
Name=Google Chrome (Custom)
Exec=/usr/bin/google-chrome-stable %U
Icon=google-chrome
Type=Application
Categories=Network;WebBrowser;
StartupNotify=true
EOF3
    else
        cat <<EOF3 > ~/.local/share/applications/browser_custom.desktop
[Desktop Entry]
Name=Firefox (Custom)
Exec=/usr/local/bin/firefoxcustom %U
Icon=/opt/firefox_custom/browser/chrome/icons/default/default128.png
Type=Application
Categories=Network;WebBrowser;
StartupNotify=true
EOF3
    fi

    # Pin v√†o taskbar n·∫øu c√≥ GNOME
    if command -v gsettings &>/dev/null; then
        gio set ~/.local/share/applications/browser_custom.desktop metadata::trusted true 2>/dev/null
        gsettings set org.gnome.shell favorite-apps "$(gsettings get org.gnome.shell favorite-apps | sed "s/]$/, 'browser_custom.desktop']/")"
    else
        echo "‚ÑπÔ∏è Tr√™n Lubuntu (LXQt), h√£y nh·∫•p ph·∫£i bi·ªÉu t∆∞·ª£ng trong menu -> 'Pin to Panel'."
    fi

    echo "‚úÖ Ho√†n t·∫•t! $BTYPE ƒë√£ ƒë∆∞·ª£c c√†i, kh√≥a update v√† t·∫Øt update n·ªôi b·ªô."
}

########################################
# MAIN SCRIPT
########################################
fix_password_issues
install_nekobox
install_browser

echo "üéâ T·∫•t c·∫£ ch·ª©c nƒÉng ƒë√£ ho√†n th√†nh!"
